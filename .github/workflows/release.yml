name: release build

on: 
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: none

    steps:
    # Set Up前にcheckout必要
    - uses: actions/checkout@v3

    - name: Set Up
      id: setup
      uses: ./.github/workflows

    - name: Build with Maven
      run: mvn --settings ./settings.xml clean install -Dbuild_time=${{ steps.setup.outputs.build_time }}

    - name: Upload src
      uses: actions/upload-artifact@v3
      with:
        name: src
        path: .

  test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: none
      packages: none

    steps:
    # Set Up前にsrc必要
    - name: Download checkout folder
      uses: actions/download-artifact@v3
      with:
        name: src
    
    - name: Set Up
      id: setup
      uses: ./.github/workflows

    - name: Test
      run: mvn --settings ./settings.xml test -Dbuild_time=${{ steps.setup.outputs.build_time }}

  delete-same-package:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: none
      packages: none

    steps:
    - name: Token発行（Github App）
      id: generate_token
      uses: tibdex/github-app-token@v1.8
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_KEY }}

    - name: Token確認
      env:
        TOKEN: ${{ steps.generate_token.outputs.token }}
      run: |
        echo "Access Token: ghs_"
        echo "Access Token: ${TOKEN:4}"

    # build_time取得に必要
    - name: Download checkout folder
      uses: actions/download-artifact@v3
      with:
        name: src
      
    # build_time取得に必要
    - name: Set Up
      id: setup
      uses: ./.github/workflows

    - name: debug
      run: |
        echo "${{ github.repository }}"
        echo "----------"

    - name: build timeの一致するパッケージID取得
      id: pkgcheck
      run: |
        # packageのバージョンIDを取得
        res=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ steps.generate_token.outputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/orgs/template-maven/packages/maven/releases.com.example.template_common/versions)
        echo "before ---"
        echo "${res}"
        echo "----------"

        id=$(echo "${res}" | jq '.[] | select(.name == "${{ steps.setup.outputs.build_time }}") | .id')
        if [ -n "$id" ]; then
          echo "ID of package with name '${{ steps.setup.outputs.build_time }}' is: ${id}"
          echo "id=${id}" >> $GITHUB_OUTPUT
        else
          echo "Package not found, skipping deletion."
          echo "id=skip" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Delete package
      if: ${{ steps.pkgcheck.outputs.id != 'skip' }}
      uses: actions/delete-package-versions@v4
      with: 
        package-name: 'releases.com.example.template_common'
        package-type: 'maven'
        package-version-ids: ${{ steps.pkgcheck.outputs.id }}
        token: ${{ steps.generate_token.outputs.token }}

  deploy:
    needs: delete-same-package
    runs-on: ubuntu-latest
    permissions:
      contents: none
      packages: write

    steps:
    # Set Up前にsrc必要
    - name: Download checkout folder
      uses: actions/download-artifact@v3
      with:
        name: src
    
    - name: Set Up
      id: setup
      uses: ./.github/workflows

    - name: Deploy to GitHub Packages
      run: mvn --settings ./settings.xml deploy -Dbuild_time=${{ steps.setup.outputs.build_time }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: jar
        path: target/*.jar

  delete-old-packages:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: none
      packages: write

    steps:
    - name: Token発行（Github App）
      id: generate_token
      uses: tibdex/github-app-token@v1.8
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_KEY }}

    - name: Delete old packages
      uses: actions/delete-package-versions@v4
      with: 
        package-name: 'releases.com.example.template_common'
        package-type: 'maven'
        min-versions-to-keep: 3
        token: ${{ steps.generate_token.outputs.token }}
