name: snapshot build

on: 
  push:
    branches-ignore:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: none

    steps:
    # Set Up前にcheckout必要
    - uses: actions/checkout@v4

    - name: Set Up
      id: setup
      uses: ./.github/workflows
      with:
        release_build: false

    - name: Build with Maven
      run: mvn --settings ./settings.xml clean install -Dbuild_time=${{ steps.setup.outputs.build_time }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: src
        path: .

  test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: none
      packages: none

    steps:
    # Set Up前にcheckout必要
    - name: Download checkout folder
      uses: actions/download-artifact@v3
      with:
        name: src
    
    - name: Set Up
      id: setup
      uses: ./.github/workflows
      with:
        release_build: false

    - name: Test
      run: mvn --settings ./settings.xml test -Dbuild_time=${{ steps.setup.outputs.build_time }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: none
      packages: write

    steps:
    # Set Up前にcheckout必要
    - name: Download checkout folder
      uses: actions/download-artifact@v3
      with:
        name: src
    
    - name: Set Up
      id: setup
      uses: ./.github/workflows
      with:
        release_build: false

    - name: Deploy to GitHub Packages
      run: mvn --settings ./settings.xml deploy -Dbuild_time=${{ steps.setup.outputs.build_time }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  delete-old-packages:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: none
      packages: none

    steps:
    - name: Token発行（Github App）
      id: generate_token
      uses: tibdex/github-app-token@v1.8
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_KEY }}

    - name: 三か月以内に登録されたパッケージID取得
      id: pkgcheck
      run: |
        # packageのバージョンIDを取得
        res=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ steps.generate_token.outputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/orgs/template-maven/packages/maven/releases.com.example.template_common/versions)
        echo "before ---"
        echo "${res}"
        echo "----------"

        # 現在の日付を取得し、三か月前の日付を計算
        three_months_ago=$(date -d '3 months ago' '+%Y-%m-%dT%H:%M:%SZ')

        # 三か月以内のパッケージIDを取得
        ids=$(echo "${res}" | jq --arg DATE "$three_months_ago" '.[] | select(.created_at > $DATE) | .id')

        # IDsをカンマで区切る
        ids=$(echo $ids | tr '\n' ',' | sed 's/,$//')

        if [ -n "$ids" ]; then
          echo "IDs of packages created within the last 3 months: ${ids}"
          echo "ids=${ids}" >> $GITHUB_ENV
        else
          echo "No packages found that were created within the last 3 months, skipping deletion."
          echo "ids=skip" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Delete package
      if: ${{ steps.pkgcheck.outputs.id != 'skip' }}
      uses: actions/delete-package-versions@v4
      with: 
        package-name: ${{ steps.setup.outputs.pkg }}
        package-type: 'maven'
        package-version-ids: ${{ steps.pkgcheck.outputs.id }}
        token: ${{ steps.generate_token.outputs.token }}
